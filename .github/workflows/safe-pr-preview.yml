name: Safe Expo Preview
on:
  pull_request_review_comment:
    types: [created]

jobs:
  check_comment:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '/preview')
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Check comment author
        id: check
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { data: permission } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.payload.comment.user.login
            });
            return permission.permission !== 'none';

  preview:
    needs: check_comment
    if: needs.check_comment.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          eas-cache: true
          expo-version: latest
          expo-cache: true
          packager: npm
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Create preview
        id: preview
        uses: expo/expo-github-action/preview@v8
        with:
          comment: false
          qr-target: 'expo-go'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          command: eas update --auto --branch safe-pr-${{ github.event.pull_request.head.ref }}
      
          
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: find_comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Expo preview

      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          body: |
            ## Expo Preview
            ${{steps.preview.outputs.comment}}
            > Commit hash: ${{steps.preview.outputs.gitCommitHash}}
            > Update published at: ${{ steps.preview.outputs.publishedTime }}
          edit-mode: replace
